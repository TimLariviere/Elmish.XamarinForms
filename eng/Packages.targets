<Project>
    <!-- External dependencies, will be marked as requirements (equal or higher) in the NuGet packages. Should target lowest possible major versions -->
    <ItemGroup>
        <!-- All -->
        <PackageReference Update="FSharp.Core" Version="5.0.0" />
        <!-- Fabulous.CodeGen -->
        <PackageReference Update="Microsoft.FSharpLu.Json" Version="0.11.6" />
        <PackageReference Update="Mono.Cecil" Version="0.11.3" />
        <PackageReference Update="Newtonsoft.Json" Version="13.0.1" />
        <!-- Fabulous.XamarinForms -->
        <PackageReference Update="Xamarin.Forms" Version="5.0.0.1874" />
        <PackageReference Update="System.Buffers" Version="4.5.1" />
        <!-- Fabulous.XamarinForms Extensions -->
        <PackageReference Update="Xamarin.Forms.Maps" Version="5.0.0.1874" />
        <PackageReference Update="OxyPlot.Xamarin.Forms" Version="1.0.0" />
        <PackageReference Update="SkiaSharp.Views.Forms" Version="1.68.1" />
        <PackageReference Update="Plugin.MediaManager.Forms" Version="1.0.0" />
        <PackageReference Update="Xamarin.FFImageLoading.Forms" Version="2.4.11.982" />
    </ItemGroup>

    <!-- Internal dependencies, can be updated without impacting users -->
    <ItemGroup>
        <!-- Shared dependencies -->
        <PackageReference Update="Microsoft.SourceLink.Github" Version="1.0.0" PrivateAssets="All" />
        <!-- Fabulous.XamarinForms.Generator -->
        <PackageReference Update="CommandLineParser.FSharp" Version="2.8.0" />
        <!-- Unit tests -->
        <PackageReference Update="FsUnit" Version="4.0.4" />
        <PackageReference Update="Microsoft.NET.Test.Sdk" Version="16.9.4" />
        <PackageReference Update="NUnit3TestAdapter" Version="3.17.0" />
    </ItemGroup>

    <!-- Tools and samples -->
    <ItemGroup Condition=" '$(IsPackable)' == 'false' ">
        <PackageReference Update="FSharp.Core" Version="5.0.0" />
        <PackageReference Update="Xamarin.Forms.PancakeView" Version="2.3.0.759" />
        <PackageReference Update="FSharp.Data" Version="4.0.1" />
        <PackageReference Update="Microsoft.NETCore.UniversalWindowsPlatform" Version="6.2.12" />
        <PackageReference Update="SkiaSharp.Views.Forms.WPF" Version="1.68.1.1" />
        <PackageReference Update="Xamarin.Essentials" Version="1.6.1" />
        <PackageReference Update="Xamarin.Forms.Platform.WPF" Version="5.0.0.1874" />
        <PackageReference Update="Xamarin.Forms.Maps.WPF" Version="5.0.0.1874" />
    </ItemGroup>

    <!--
        Replace the versions of all ProjectReferences nodes during dotnet pack with a pre-computed bound (see build.fsx)
        Currently, the ProjectReference nodes don't support setting an upper bound for the version, which results in a `>= X.Y.Z` constraint in the NuGet package.
        To ensure only binary compatible packages are used together, this little hack replaces the default version value of ProjectReference with a proper bound.
    -->
    <Target Name="_BoundedProjectReferencesVersion" AfterTargets="_GetProjectReferenceVersions" Condition=" '$(IsPacking)' == 'true' ">
        <ItemGroup>
            <_ProjectReferencesWithBounds Include="@(_ProjectReferencesWithVersions)">
                <ProjectVersion>$(VersionBounds)</ProjectVersion>
            </_ProjectReferencesWithBounds>
        </ItemGroup>
        <ItemGroup>
            <_ProjectReferencesWithVersions Remove="@(_ProjectReferencesWithVersions)" />
            <_ProjectReferencesWithVersions Include="@(_ProjectReferencesWithBounds)" />
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <RestoreSources>
            $(RestoreSources);
            https://api.nuget.org/v3/index.json;
        </RestoreSources>
    </PropertyGroup>
</Project>